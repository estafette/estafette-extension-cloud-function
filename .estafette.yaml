builder:
  track: dev

labels:
  app-group: estafette-ci-extensions
  team: estafette-team
  language: golang

version:
  semver:
    major: 0
    minor: 1

stages:
  build:
    image: golang:1.13.6-alpine3.11
    env:
      CGO_ENABLED: 0
      GOOS: linux
    commands:
    - go test ./...
    - go build -a -installsuffix cgo -ldflags "-X main.appgroup=${ESTAFETTE_LABEL_APP_GROUP} -X main.app=${ESTAFETTE_GIT_NAME} -X main.version=${ESTAFETTE_BUILD_VERSION} -X main.revision=${ESTAFETTE_GIT_REVISION} -X main.branch=${ESTAFETTE_GIT_BRANCH} -X main.buildDate=${ESTAFETTE_BUILD_DATETIME}" -o ./publish/${ESTAFETTE_GIT_NAME} .

  bake:
    image: extensions/docker:dev
    action: build
    inline: |
      FROM google/cloud-sdk:276.0.0-alpine

      LABEL maintainer="estafette.io" \
            description="The ${ESTAFETTE_GIT_NAME} component is an Estafette extension to deploy applications to a Kubernetes Engine cluster"

      RUN apk update \
          && apk add --upgrade gnupg \
          && rm /var/cache/apk/*

      COPY ${ESTAFETTE_GIT_NAME} /

      ENV ESTAFETTE_LOG_FORMAT="console"

      ENTRYPOINT ["/${ESTAFETTE_GIT_NAME}"]
    container: cloud-function
    repositories:
    - extensions
    path: ./publish

  check-container:
    parallelStages:
      check-efficiency:
        image: extensions/docker:dev
        action: dive
        container: cloud-function
        repositories:
        - extensions

      vulnerability-scan:
        image: extensions/docker:dev
        action: trivy
        container: cloud-function
        repositories:
        - extensions

  test-alpha-version:
    image: extensions/cloud-function:${ESTAFETTE_BUILD_VERSION}
    credentials: gke-tooling
    app: mycloudfunction
    region: europe-west1
    runtime: go111
    timeout: 60
    source: .
    env:
      MYENVVAR: somevalue
      MYSECRET: estafette.secret(YjTy7bw294jSfUSt.xEPLb_pRjmVCLFosptSzmOeBwc63INN7bIcP)
    memory: 256MB
    dryrun: true

  test-alpha-version-minimal:
    image: extensions/cloud-function:${ESTAFETTE_BUILD_VERSION}
    credentials: gke-tooling
    runtime: go111
    dryrun: true

  push-to-docker-hub:
    image: extensions/docker:dev
    action: push
    container: cloud-function
    repositories:
    - extensions

  slack-notify:
    image: extensions/slack-build-status:dev
    workspace: estafette
    channels:
    - '#build-status'
    when:
      status == 'succeeded' ||
      status == 'failed'

releases:
  dev:
    triggers:
    - pipeline:
        name: self
        branch: .+
    stages:
      tag-container-image:
        image: extensions/docker:stable
        action: tag
        container: cloud-function
        repositories:
        - extensions
        tags:
        - dev

  beta:
    stages:
      tag-container-image:
        image: extensions/docker:stable
        action: tag
        container: cloud-function
        repositories:
        - extensions
        tags:
        - beta

      slack-notify:
        image: extensions/slack-build-status:dev
        workspace: estafette
        channels:
        - '#release-status'
        when:
          status == 'succeeded' ||
          status == 'failed'

  stable:
    stages:
      tag-container-image:
        image: extensions/docker:stable
        action: tag
        container: cloud-function
        repositories:
        - extensions
        tags:
        - stable
        - latest

      slack-notify:
        image: extensions/slack-build-status:dev
        workspace: estafette
        channels:
        - '#release-status'
        when:
          status == 'succeeded' ||
          status == 'failed'